<?php

function em_apply_menu() {
  $items = array();

  $items['client/get-started'] = array(
    'page callback' => 'em_apply_check',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['user/%/apply'] = array(
    'page callback' => 'em_apply_form',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
 * Implementation of hook_block_info().
 */
function em_apply_block_info() {
  $blocks['apply-block'] = array(
    'info' => t('Custom: Apply Block'),
  );

  return $blocks;
}

function em_apply_block_view($delta='') {
    $block = array();
    switch ($delta) {
	  case 'apply-block':
            $block['subject'] = '';
           // $block['content'] = apply_block();
           $block['content'] = "<a href='client/get-started'>GET STARTED</a>";
        break;
    }
    return $block;
}

function em_apply_check(){
	global $user;

	if($user->uid == '0'){
		drupal_goto('user/login/',array('query'=>array('destination' => 'client/get-started')));
	}else{
		drupal_goto('user/'.$user->uid.'/apply');
	}
	return;


}

function em_apply_form($uid){
  global $user;
  $node = (object) array('uid' => $user->uid, 'name' => (isset($user->name) ? $user->name : ''), 'type' => 'data_company', 'language' => LANGUAGE_NONE);
  $form_state['build_info']['args'] = array($node);
  form_load_include($form_state, 'inc', 'node', 'node.pages');
	return drupal_get_form('data_company_node_form');
}





function em_apply_node_presave($node) {
	global $user;
	if ($node->type == 'data_company'){
		// check who is updating the form
		if($user->uid == $node->uid){
		//admin
			$result = db_select('em_company','d')
		   		->fields('d')
				->condition('formid',$node->nid,'=')
				->condition('admin_uid', $node->uid,'=')
		    	->execute()
				->fetchAssoc();
			if($result){
			//update
			db_update('em_company')
			    ->fields(array(
			    	'updated' => REQUEST_TIME
			     		))
			    ->condition('id', $result['id'])
			    ->execute();
			}else{
				//create new company
				$id = db_insert('em_company')
					->fields(array(
			  			'formid' => $node->nid,
			  			'admin_uid' => $node->uid,
			  			'uid' => $user->uid,
			  			'created' => REQUEST_TIME,
			  			'updated' => REQUEST_TIME,
						))
					->execute();
			}
			
		}else{
		// officer
				$result = db_select('em_company','d')
			   		->fields('d')
					->condition('formid',$node->nid.'=')
					->condition('uid', $user->uid,'=')
					->condition('admin_uid', $node->uid,'=')
			    	->execute()
					->fetchAssoc();
				if($result){
				//update
				db_update('em_company')
				    ->fields(array(
				    	'updated' => REQUEST_TIME
				     		))
				    ->condition('id', $result['id'])
				    ->execute();
				}else{
					//create new company officer record
					$id = db_insert('em_company') 
						->fields(array(
				  			'formid' => $node->nid,
				  			'admin_uid' => $node->uid,
				  			'uid' => $user->uid,
				  			'created' => REQUEST_TIME,
				  			'updated' => REQUEST_TIME,
							))
						->execute();
				}
			
		}
	}

}

function em_apply_node_update($node) {
	if ($node->type == 'data_company'){
		unset($node->field_fein);
	}

}

function em_apply_node_prepare($node) {
  if ($node->type == 'data_company'){
	 $node->field_fein['und'][0]['value'] = 'test fein';
	}

}

function em_apply_form_data_company_node_form_alter(&$form, &$form_state) {

  global $user;
  //dpm($user);
  $owner = $form_state['node']->uid;
  //also see if the user exists in the company table

  // only allow Admin users to view/edit some personal fields of Officers
  if ($owner <> $user->uid || (in_array('co_admin', $user->roles) && !in_array('administrator', $user->roles))){
    // hide these fields to a Co_Admin on first load
    $form = _core_ef_form_admin($form);
	}
  // only allow Co_Users users to view/edit personal fields while disabling company fields
  if (in_array('co_user', $user->roles) && !in_array('administrator', $user->roles)){
    //disable company fields
    $form = _core_ef_form_user($form);
  }
  return $form;
}

function em_apply_user($op, &$edit, &$account, $category = NULL) {
  global $user;

  if ($op == 'login') {
    // Load the anonymous user
    drupal_goto(referer_uri());
  }
}

